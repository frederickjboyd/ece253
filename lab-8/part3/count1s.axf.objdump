
W:/ece253/8/part3/count1s.axf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__cs3_interrupt_vector>:
/* Program that counts consecutive 1â€™s */
.text
.global _start
_start: LDR R4, =TEST_NUM // Load the data word into R1
   0:	e59f4068 	ldr	r4, [pc, #104]	; 70 <TEST_NUM+0x24>
        MOV R5, #0 // R0 will hold the result
   4:	e3a05000 	mov	r5, #0

00000008 <MAIN>:

MAIN: LDR R1, [R4]
   8:	e5941000 	ldr	r1, [r4]
      ADD R4, #4
   c:	e2844004 	add	r4, r4, #4
      CMP R1, #0
  10:	e3510000 	cmp	r1, #0
      BEQ MAIN_END
  14:	0a000003 	beq	28 <MAIN_END>
      BL ONES
  18:	eb000003 	bl	2c <ONES>
      CMP R5, R0
  1c:	e1550000 	cmp	r5, r0
      MOVLT R5, R0
  20:	b1a05000 	movlt	r5, r0
      B MAIN
  24:	eafffff7 	b	8 <MAIN>

00000028 <MAIN_END>:

MAIN_END: B MAIN_END
  28:	eafffffe 	b	28 <MAIN_END>

0000002c <ONES>:

ONES: MOV R0, #0
  2c:	e3a00000 	mov	r0, #0

00000030 <L_LOOP>:
L_LOOP: CMP R1, #0
  30:	e3510000 	cmp	r1, #0
        BEQ L_END
  34:	0a000003 	beq	48 <L_END>
        LSR R2, R1, #1
  38:	e1a020a1 	lsr	r2, r1, #1
        AND R1, R2, R1
  3c:	e0021001 	and	r1, r2, r1
        ADD R0, #1
  40:	e2800001 	add	r0, r0, #1
        B L_LOOP
  44:	eafffff9 	b	30 <L_LOOP>

00000048 <L_END>:
L_END: MOV PC, LR // Return
  48:	e1a0f00e 	mov	pc, lr

0000004c <TEST_NUM>:
  4c:	103fe00f 	.word	0x103fe00f
  50:	12345678 	.word	0x12345678
  54:	89abcdef 	.word	0x89abcdef
  58:	122d9561 	.word	0x122d9561
  5c:	ca526d2a 	.word	0xca526d2a
  60:	9f0cb7f4 	.word	0x9f0cb7f4
  64:	bb437342 	.word	0xbb437342
  68:	ffffffff 	.word	0xffffffff
  6c:	00000000 	.word	0x00000000
  70:	0000004c 	.word	0x0000004c
